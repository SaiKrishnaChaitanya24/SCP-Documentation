Structural-Connectivity Pipeline
===============================

Running the Pipeline
--------------------

To run the pipeline, follow the steps below. Ensure that you have the necessary permissions and resources to execute the commands.

Step 1: Clone the Repository
----------------------------

First, clone the repository to your local machine. You can do this using the following command::

        git clone https://github.com/SaiKrishnaChaitanya24/Structural-Connectivity-Pipeline.git

Before you build the container, copy the freesurfer license.txt file into the cloned repository using the following command::

        cp {freesurfer license.txt} ./Structural-Connectivity-Pipeline/

Step 2: Build the Singularity Container
---------------------------------------

Build the ``structural_connectivity_pipeline.sif`` Singularity container using the provided Singularity definition file. This ensures you have the necessary environment to run the pipeline. Use the following command::

        cd Structural-Connectivity-Pipeline

        sbatch --cpus-per-task=4 --mem=32G --wrap="singularity build structural_connectivity_pipeline.sif Singularity.def"

Step 3: Create Output Directory
-------------------------------

Create a directory to store the output files generated by the pipeline. Use the command below to create the output directory::

        mkdir -p {output_path}

Step 4: Run the Pipeline
------------------------

Run the pipeline using the Singularity container. You need to specify the subject name, unprocessed T1 image, DTI-T1-0GenericAffine.mat, preprocessed DWI image, tensor mask, dico-0InverseWarp.nii.gz (if notopup), and t1_brain.nii.gz file.

Bind the folder containing all the required files path as ``/folder_path:/folder_path`` (all files must be in the same folder path). Note - the folder must also contain ``DWI_Preprocessed.bvec`` and ``DWI_Preprocessed.bval`` files as well.

For Topup::

        if you are already in the Structural-Connectivity-Pipeline directory run below command, else change your current path to where Structural-Connectivity-Pipeline directory is and run the below command

        sbatch --cpus-per-task=4 --job-name=scp --mem=32G --time=2-00:00:00 --wrap="singularity run --no-home --bind /folder_path:/folder_path --bind {output_path}:/output structural_connectivity_pipeline.sif -s {subject_name} -t {unprocessed T1 image} -a {DTI-T1-0GenericAffine.mat} -d {DWI Preprocessed image} -m {tensor mask} -o /output -f Topup -r {t1_brain.nii.gz}"

If you already implemented freesurfer and want to use this pipeline, then use the command below (Note: in the command below the freesurfer path directory is bound as output path and the freesurfer path must be with respect to the subject name.)::

        sbatch --cpus-per-task=4 --job-name=scp --mem=32G --time=2-00:00:00 --wrap="singularity run --no-home --bind /folder_path:/folder_path --bind {output_path}:/output structural_connectivity_pipeline.sif -s {subject_name} -t {unprocessed T1 image} -a {DTI-T1-0GenericAffine.mat} -d {DWI Preprocessed image} -m {tensor mask} -o /output -f Topup -r {t1_brain.nii.gz} -b True"

For notopup::

         if you are already in the Structural-Connectivity-Pipeline directory run below command, else change your current path to where Structural-Connectivity-Pipeline directory is and run the below command

        sbatch --cpus-per-task=4 --job-name=scp --mem=32G --time=2-00:00:00 --wrap="singularity run --no-home --bind /folder_path:/folder_path --bind {output_path}:/output structural_connectivity_pipeline.sif -s {subject_name} -t {unprocessed T1 image} -a {DTI-T1-0GenericAffine.mat} -d {DWI Preprocessed image} -m {tensor mask} -o /output -r {t1_brain.nii.gz} -i {dico-0InverseWarp.nii.gz}"

If you already implemented freesurfer and want to use this pipeline, then use the command below (Note: in the command below the freesurfer path directory is bound as output path and the freesurfer path must be with respect to the subject name.)::

        sbatch --cpus-per-task=4 --job-name=scp --mem=32G --time=2-00:00:00 --wrap="singularity run --no-home --bind /folder_path:/folder_path --bind {output_path}:/output structural_connectivity_pipeline.sif -s {subject_name} -t {unprocessed T1 image} -a {DTI-T1-0GenericAffine.mat} -d {DWI Preprocessed image} -m {tensor mask} -o /output -r {t1_brain.nii.gz} -i {dico-0InverseWarp.nii.gz} -b True"

Note: ``/folder_path:/folder_path`` needs to be replaced with the absolute path where your data is stored.

Remember to replace ``{subject_name}``, ``{unprocessed T1 image}``, ``{DTI-T1-0GenericAffine.mat}``, ``{tensor mask}``, ``{t1_brain.nii.gz}``, and ``{dico-0InverseWarp.nii.gz}`` with the actual values for your specific data (with absolute path).
